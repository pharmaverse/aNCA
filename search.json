[{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Report bugs and suggest enhancements","title":"Report bugs and suggest enhancements","text":"Discussions regarding project handled using issues system directly GitHub. wish create bug report, suggest changes additions, just ask questions regarding project feel free open new issue. Templates specific topic available, please try select appropriate one follow guidelines close applicable. general, posted issue contain brief description problem, well expectations - design application user-friendliness mind, wish hear opinion!","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"joining-the-project","dir":"","previous_headings":"","what":"Joining the project","title":"Report bugs and suggest enhancements","text":"order gain privileges commit changes codebase, need added collaborator. , please contact one contributors. can find list contact info DESCRIPTION file.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Report bugs and suggest enhancements","text":"creating changes, please make sure appropriate issue thread opened. place discuss topic hand, agree approach solving problem keep tasks organized across whole project. keep things organized, GitHub Project board used.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"status","dir":"","previous_headings":"Issues","what":"Status","title":"Report bugs and suggest enhancements","text":"new issue go Backlog. Feel free add bugs feature requests, also loose ideas - also space discussing proposals validity implementing . committed implementing change, issue moved Todo status, subsequently progress feature branch created work begun. change ready pull request open, issues moved Needs review picked reviewer moved review. change merged issue closed, moved Done.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"priority","dir":"","previous_headings":"Issues","what":"Priority","title":"Report bugs and suggest enhancements","text":"tasks prioritized based variant MSCW method. gives verbose descriptions level priority: - MUST - task highest priority, must implemented application usable useful. - - task include ready product, breaking implemented. - - things nice useful, instrumental whole package. - WISH - ideas valid time , nevertheless cool become useful development progresses.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"branches","dir":"","previous_headings":"","what":"Branches","title":"Report bugs and suggest enhancements","text":"change implemented separate branch. Branches related issues opened named issue topic. Branch name include change type (bug/enhancement/documentation etc.) name solved issue. Examples:","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"code-guidelines","dir":"","previous_headings":"","what":"Code guidelines","title":"Report bugs and suggest enhancements","text":"codebase follows general tidyverse guidelines, lenient implementation. Please make effort make code clean, readable easily understandable reviewer. general, long code passes lintr tests, good.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"commit-messages","dir":"","previous_headings":"","what":"Commit messages","title":"Report bugs and suggest enhancements","text":"try follow conventional commits convention whenever possible. said, software development messy feel like standard suit situation, feel free deviate , keep commit messages short meaningful least.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Report bugs and suggest enhancements","text":"Pull request template available make documenting PRs consistent streamlined. PR description include:","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"issue","dir":"","previous_headings":"Pull requests","what":"Issue","title":"Report bugs and suggest enhancements","text":"Number appropriate issue pull request closes references.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"description","dir":"","previous_headings":"Pull requests","what":"Description","title":"Report bugs and suggest enhancements","text":"Brief description implemented changes, reasoning behind changes.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"definition-of-done","dir":"","previous_headings":"Pull requests","what":"Definition of Done","title":"Report bugs and suggest enhancements","text":"Checklist minimal requirements consider feature bugfix complete. Preferably list supplied appropriate issue. Requirements might change scope might grow shrink development, feel free make changes list relevant, make sure deviations documented.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"how-to-test","dir":"","previous_headings":"Pull requests","what":"How to test","title":"Report bugs and suggest enhancements","text":"Instructions test new feature manually (go …, click …). Might include code snippets. especially important include instructions submitted code fully covered unit tests. full suite unit tests supplied alongside logic, part might required relevant terms miscellaneous changes (documentation, dependencies etc.).","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"developers-checklist","dir":"","previous_headings":"Pull requests","what":"Developers checklist","title":"Report bugs and suggest enhancements","text":"part reminder perform basic tasks checks code submitted, ensure compliance guidelines. opening PR review, please make sure : - Code passes lintr checks - Code passes unit tests - New logic covered unit tests - New logic documented - Package version bumped rules help keep work organized, well allow quick information flow related issues, branches pull requests.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"notes-to-reviewer","dir":"","previous_headings":"Pull requests","what":"Notes to reviewer","title":"Report bugs and suggest enhancements","text":"anything reviewer know tackling pull request, please provide . include things like pointing specific parts code require special attention, explaining decisions behind unusual implementations providing logic behind changing scope task.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"bumping-package-version","dir":"","previous_headings":"Pull requests","what":"Bumping package version","title":"Report bugs and suggest enhancements","text":"Package versioning must use semantic versioning schema, developement extension: X.Y.Z.9NNN","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"developement-version","dir":"","previous_headings":"Pull requests > Bumping package version","what":"Developement version","title":"Report bugs and suggest enhancements","text":"PR introduces changes code, dependencies function documentation, required developement package version incremented 1 (.9NNN number, last part versioning schema). current feature branch might outdated, merging please cross-check main branch version submitting correct.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"semantic-versioning","dir":"","previous_headings":"Pull requests > Bumping package version","what":"Semantic versioning","title":"Report bugs and suggest enhancements","text":"versioning schema major / minor / patch releases must adhere semantic versioning guidelines.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"code-review","dir":"","previous_headings":"","what":"Code review","title":"Report bugs and suggest enhancements","text":"pull request must accepted least two reviewers can merged main branch.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"for-reviewee","dir":"","previous_headings":"Code review","what":"For reviewee","title":"Report bugs and suggest enhancements","text":"change done, pull request open description filled, please move issue Progress Needs review status, can picked reviewer. point contributor person validating change work kinks lead merging changes.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"for-reviewers","dir":"","previous_headings":"Code review","what":"For reviewers","title":"Report bugs and suggest enhancements","text":"reviewing pull request, please try follow conventional comments guidelines. Ideas labels described convention can helpful getting thoughts across facilitate meaningful cooperation. said, applicable every circumstance free whatever feel suitable, long aims provide valid discussion.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"beware","dir":"","previous_headings":"","what":"Beware","title":"Report bugs and suggest enhancements","text":"package split two parts: R package shiny application. Logic code, useful can easily run via console placed R/ directory. Code strictly related Shiny application, especially code generates interface elements, placed inst/shiny/ folder. package requires dependencies explicit @import statements NAMESPACE file. functions used package , rather Shiny application. Please beware situation managing package dependencies - functions might used app, even though verbosely imported.","code":""},{"path":"https://pharmaverse.github.io/aNCA/CONTRIBUTING.html","id":"in-depth-guides","dir":"","previous_headings":"","what":"In-depth guides","title":"Report bugs and suggest enhancements","text":"useful links -depth documentation regarding specific parts pacakage utilise -build tools extend capabilities application: Adding TLGs","code":""},{"path":"https://pharmaverse.github.io/aNCA/PULL_REQUEST_TEMPLATE.html","id":"issue","dir":"","previous_headings":"","what":"Issue","title":"NA","text":"Closes #","code":""},{"path":"https://pharmaverse.github.io/aNCA/PULL_REQUEST_TEMPLATE.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"NA","text":"Change description.","code":""},{"path":"https://pharmaverse.github.io/aNCA/PULL_REQUEST_TEMPLATE.html","id":"definition-of-done","dir":"","previous_headings":"","what":"Definition of Done","title":"NA","text":"Definition done, preferably copied issue.","code":""},{"path":"https://pharmaverse.github.io/aNCA/PULL_REQUEST_TEMPLATE.html","id":"how-to-test","dir":"","previous_headings":"","what":"How to test","title":"NA","text":"test features covered unit tests.","code":""},{"path":"https://pharmaverse.github.io/aNCA/PULL_REQUEST_TEMPLATE.html","id":"contributor-checklist","dir":"","previous_headings":"","what":"Contributor checklist","title":"NA","text":"Code passes lintr checks Code passes unit tests New logic covered unit tests New logic documented Package version incremented","code":""},{"path":"https://pharmaverse.github.io/aNCA/PULL_REQUEST_TEMPLATE.html","id":"notes-to-reviewer","dir":"","previous_headings":"","what":"Notes to reviewer","title":"NA","text":"Anything reviewer know tacking pull request?","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"uploading-a-dataset","dir":"Articles","previous_headings":"Step 1: Prepare Dataset","what":"Uploading a dataset","title":"aNCA Shiny App User Guide","text":"Click Upload File select dataset like use. data must .csv .rds format. best input app data follows ADNCA format. formats data also work. Alternatively, exploring app, Users can use Dummy dataset already uploaded.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"data-mapping","dir":"Articles","previous_headings":"Step 1: Prepare Dataset","what":"Data mapping","title":"aNCA Shiny App User Guide","text":"dataset uploaded, can verify data expected, click Mapping Filters tab. Map correct columns dataset corresponding label. Unit Variables, dataset defined column units, select . Otherwise, scrolling , can select units corresponding columns. Click Submit Mapping. automatically directed next tab.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"verifying-and-adding-filters","dir":"Articles","previous_headings":"Step 1: Prepare Dataset","what":"Verifying and adding filters","title":"aNCA Shiny App User Guide","text":"Check data contains information expecting mapped correctly. want change data adding filters, return Mapping Filters page, scroll add filters.  Don’t forget scroll click Submit Filters!","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"step-2-run-nca","dir":"Articles","previous_headings":"","what":"Step 2: Run NCA","title":"aNCA Shiny App User Guide","text":"Click NCA tab top screen switch next section.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"data-selection","dir":"Articles","previous_headings":"Step 2: Run NCA","what":"Data selection","title":"aNCA Shiny App User Guide","text":"NCA settings: Choose Analyte, Dose Number(s) /Specimen(s) like run NCA , extrapolation method NCA parameters calculate. Select additional options including partial AUCs, rule sets flag data. table summarizes settings selected.  Click Run NCA top page check data expected. automatically redirected Results tab.  Save Project Settings/Upload Settings option working currently.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"main-results","dir":"Articles","previous_headings":"Step 3: NCA Results","what":"Main Results","title":"aNCA Shiny App User Guide","text":"NCA Results tab shows individual results NCA. can select parameters like view. Results red flagged “FALSE” rule sets selected, results purple flagged “MISSING”, results white flagged.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"exclusions-and-manual-slopes","dir":"Articles","previous_headings":"Step 3: NCA Results","what":"Exclusions and Manual Slopes","title":"aNCA Shiny App User Guide","text":"Click Slopes tab view detailed information slopes selected NCA. add exclusions manual slope selections, redirect Slope Selector tab Setup page.  two different ways add exclusions/selections slopes.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"via-the-buttons","dir":"Articles","previous_headings":"Step 3: NCA Results > Exclusions and Manual Slopes","what":"Via the Buttons","title":"aNCA Shiny App User Guide","text":"selection exclusion, click + Exclusion/Selection input corresponding information. RANGE refers data point number slope, can seen hovering points plots . remove, select sample row click - Remove selected rows.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"via-the-plots","dir":"Articles","previous_headings":"Step 3: NCA Results > Exclusions and Manual Slopes","what":"Via the Plots","title":"aNCA Shiny App User Guide","text":"-app guidance, can click ? button.  selection, click first point last point want included slope. plot update row added table. can add reason selection. exclusion, double click point want exclude. plot update along table. remove, either remove via table selection, repeat action (.e. select new slope, double click point).","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"applying-the-exclusions","dir":"Articles","previous_headings":"Step 3: NCA Results > Exclusions and Manual Slopes","what":"Applying the exclusions","title":"aNCA Shiny App User Guide","text":"exclusions/selections added, click Apply.  can check applied Results page, Exclusions tab. click Apply, manual slopes added!","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"parameter-datasets","dir":"Articles","previous_headings":"Step 3: NCA Results > Exclusions and Manual Slopes","what":"Parameter Datasets","title":"aNCA Shiny App User Guide","text":"Parameter Datasets tab can see export ADPP PP datasets.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"saving-and-uploading-settings","dir":"Articles","previous_headings":"Step 3: NCA Results","what":"Saving and uploading settings","title":"aNCA Shiny App User Guide","text":"Currently work progress completing NCA creating manual slopes, may want save next time.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"saving","dir":"Articles","previous_headings":"Step 3: NCA Results > Saving and uploading settings","what":"Saving","title":"aNCA Shiny App User Guide","text":"Click button Save Project Settings top tabs. download .csv file.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"uploading","dir":"Articles","previous_headings":"Step 3: NCA Results > Saving and uploading settings","what":"Uploading","title":"aNCA Shiny App User Guide","text":"upload settings later analysis, column mapping, Setup, NCA Settings tab, click Browse. inclusions exclusions automatically added data.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"step-4-visualization","dir":"Articles","previous_headings":"Step 3: NCA Results","what":"Step 4: Visualization","title":"aNCA Shiny App User Guide","text":"Visualization tab, find different visualization options, including Individual Plots, Mean Plots, Descriptive Statistics, Boxplots. Currently work progress","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"step-5-tlgs","dir":"Articles","previous_headings":"Step 3: NCA Results","what":"Step 5: TLGs","title":"aNCA Shiny App User Guide","text":"Currently work progress. TLGs features available. performing analysis, can prepare reports regarding analysis, including various tables, listings graphs.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"order-details","dir":"Articles","previous_headings":"Step 3: NCA Results > Step 5: TLGs","what":"Order details","title":"aNCA Shiny App User Guide","text":"Firstly, need prepare order TLGs. Table Order details tab display default TLGs metadata. can add additional reports clicking Add TLG button. bring list available, defined TLGs. Select ones interested click Add TLGs Order button. can also remove unwanted entries selecting clicking Remove TLG. happy selection, click Submit Order Details.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"navigating-the-tlgs","dir":"Articles","previous_headings":"Step 3: NCA Results > Step 5: TLGs","what":"Navigating the TLGs","title":"aNCA Shiny App User Guide","text":"application provides three separate tabs differentiating Tables, Listings Graphs. tab show sidebar left screen. let navigate specific entry.  Using widgets top can specify number entries per page change pages.  Lastly, widgets right used customizing resulting reports.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/aNCA.html","id":"customizing-the-tlgs","dir":"Articles","previous_headings":"Step 3: NCA Results > Step 5: TLGs","what":"Customizing the TLGs","title":"aNCA Shiny App User Guide","text":"Exact customization options available given TLGs depend implementation. Usually, able specify things like titles footnotes, axis labels, limits grouping variables. Simply provide desired value given widget TLG update real time. Leaving widget empty induce default behavior TLG. fields provide additional functionalities. text fields, special syntax might used reference values attributes data: prefacing column name ! reference label attribute given column, e.g. !DOSEU translate Treatment Dose Units. prefacing column name $ reference value given column, e.g. $DOSEU translate mg (dummy dataset). can always click ? button help.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"adding-new-tables-listing-and-graphs","dir":"Articles","previous_headings":"","what":"Adding new Tables, Listing and Graphs","title":"Adding new TLGs to the package","text":"order add new TLGs, two things needed: - TLG definition specified tlg.yaml file - implementation function responsible generating entry (table, list, graph).","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"tlg-definition","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs","what":"TLG definition","title":"Adding new TLGs to the package","text":"Specified tlg.yaml file. Entry file responsible providing metadata regarding TLG (like name, descriptions, links), function reference creating resulting TLG options, taken arguments generating function, allow quick easy definition widgets rendered application interface. allows user customize plots accordance needs.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"general-format","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs > TLG definition","what":"General format","title":"Adding new TLGs to the package","text":"entry following format. Identifying keys (wrapped <>) provided creator unique within scope (indentation level).","code":"# unique identifier for given entry <entry id>:   # true / false whether TLG should be included as default   is_default:   # type of the TLG, in this case must be Graph   type:   # name of the dataset   dataset:   # standarized id of the TLG, e.g. pkcg01        pkid:   # short label to be displayed as tab name   label:   # longer descriptions, to be displayed in the order table   description:   # link to the documentation of the TLG   link:   # name of the function exported by the package, responsible for generating TLG, must return a list of plots to be displayed   fun:   # options that can be passed as arguments to the function, will generate an editing widget on the TLG page   options:     # see below mor more information on options        template:   # You can also specify template definitions. This is a character string with id of another TLG definition. All options will be copied over from template id. Any provided parameters will be a) overwritten if existing in the template or b) added as new."},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"options","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs > TLG definition","what":"Options","title":"Adding new TLGs to the package","text":"Options passable arguments implementation function. provided option generate widget user provide customized values. main interface allow users customize reports. Options identified unique option_id, named argument provided implementation function. example, implementation function allows specify xaxis_label argument, option_id . several types input widgets can specify.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"text","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs > TLG definition > Options","what":"text","title":"Adding new TLGs to the package","text":"Standard shiny textInput.","code":"# option id, the same as the argument that is passed to the rendering function, must be unique in the scope of the TLG entry <option id>:   # type of the option/widget   type: text   # label to be displayed in the editing widget   label:   # default value to be provided in the field;   # if provided, will overwrite function argument defaults;   # if left empty, function defaults will be applied;   default:"},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"numeric","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs > TLG definition > Options","what":"numeric","title":"Adding new TLGs to the package","text":"Standard shiny numericInput.","code":"# option id, the same as the argument that is passed to the rendering function, must be unique in the scope of the TLG entry <option id>:   # type of the option/widget   type: numeric   # label to be displayed in the editing widget   label:   # default value to be provided in the field;   # if provided, will overwrite function argument defaults;   # if left empty, function defaults will be applied;   default:"},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"select","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs > TLG definition > Options","what":"select","title":"Adding new TLGs to the package","text":"Standard shiny selectInput.","code":"# option id, the same as the argument that is passed to the rendering function, must be unique in the scope of the TLG entry <option id>:   # type of the option/widget   type: select   # label to be displayed in the editing widget   label:   # choices to pick from the dropdown, either specified outright or using a special keyword:   # - '.colnames' keyword will pull the choices from the data column names   # - '$COLUMN_NAME' keyword will pull choices from values of a specific column   choices:   # whether to allow for multiple values to be selected     multiple:   # default value to be provided in the field;   # if provided, will overwrite function argument defaults;   # if left empty, function defaults will be applied;   # '.all' keyword can be applied to select all choices;   default:"},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"table","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs > TLG definition > Options","what":"table","title":"Adding new TLGs to the package","text":"","code":"# option id, the same as the argument that is passed to the rendering function, must be unique in the scope of the TLG entry <option id>:   # type of the option/widget   type: table   # label to be displayed in the editing widget   label: \"Variables formatting\"   # column definition for the input table, specifying each column type   cols:     # colum name, as accepted in the implementation function     <column_name>:       # type of the input widget, either `text` or `select`       type:       # label for the column header       label:       # applicable to `select` type, choices to pick from the dropdown, either specified outright or using a special keyword:       # - '.colnames' keyword will pull the choices from the data column names       # - '$COLUMN_NAME' keyword will pull choices from values of a specific column       choices:   # default rows definition, should contain a list of rows that should be applied as defaults;   # each row should be an array containing value for each defined column;   # if row value for specific column should be empty, use special `$NA` keyword.   default_rows:"},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"group-label","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs > TLG definition > Options","what":"group label","title":"Adding new TLGs to the package","text":"order group options widgets visually, can specify group_labels options definitions. group label specified special keyword .group_label_N, N integer ID, incremented label used within particular TLG entry.","code":"# will create a label to help visually group related widgets; should be a character string; N should be replaced with an integer to uniquely identify the keyword     .group_label_N:"},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"examples","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs > TLG definition","what":"Examples","title":"Adding new TLGs to the package","text":"examples TLG definition implementations, please see tlg.yaml file repository.","code":""},{"path":"https://pharmaverse.github.io/aNCA/articles/adding_tlg.html","id":"implementation-function","dir":"Articles","previous_headings":"Adding new Tables, Listing and Graphs","what":"Implementation function","title":"Adding new TLGs to the package","text":"Function defined within aNCA package meet following criteria: t_* tables l_* listings g_* graphs accept data argument providing results rendered given TLG return list entries single entry.","code":""},{"path":"https://pharmaverse.github.io/aNCA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ercan Suekuer. Author, maintainer. Gerardo Jose Rodriguez. Author. Pascal Baertschi. Author. Jana Spinner. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://pharmaverse.github.io/aNCA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Suekuer E, Rodriguez G, Baertschi P, Spinner J (2025). aNCA: (Pre-)Clinical NCA Dynamic Shiny App. R package version 0.0.0.9021, https://github.com/pharmaverse/aNCA, https://pharmaverse.github.io/aNCA/.","code":"@Manual{,   title = {aNCA: (Pre-)Clinical NCA in a Dynamic Shiny App},   author = {Ercan Suekuer and Gerardo Jose Rodriguez and Pascal Baertschi and Jana Spinner},   year = {2025},   note = {R package version 0.0.0.9021, https://github.com/pharmaverse/aNCA},   url = {https://pharmaverse.github.io/aNCA/}, }"},{"path":"https://pharmaverse.github.io/aNCA/index.html","id":"automated-non-compartmental-analysis-anca","dir":"","previous_headings":"","what":"(Pre-)Clinical NCA in a Dynamic Shiny App","title":"(Pre-)Clinical NCA in a Dynamic Shiny App","text":"aim develop share open-source R Shiny application performing Non-Compartmental Analysis (NCA) clinical non-clinical datasets worldwide across pharmaceutical companies.","code":""},{"path":"https://pharmaverse.github.io/aNCA/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"(Pre-)Clinical NCA in a Dynamic Shiny App","text":"application enables users upload datasets perform Non-Compartment Analysis (NCA) pre-clinical clinical datasets, results easily visualizable. Designed user-friendliness mind, app aims make NCA accessible straightforward scientists. Among features currently possess, App can: Customize half life calculation: Either rule settings definitions performing manual -plot adjustments Define AUC intervals interest: Providing default last -infinite calculations Visualize data results interactive boxplots, summary statistic tables scatter plots Produce PP ADPP dataset formats resulting parameters Save analysis settings reupload later keep analysing!","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/aNCA/index.html","id":"via-pak-recommended","dir":"","previous_headings":"Installation","what":"Via pak (recommended)","title":"(Pre-)Clinical NCA in a Dynamic Shiny App","text":"recommend using pak package installation, along system dependencies. pak available, need set first: can install aNCA running: R console.","code":"install.packages(\"pak\") pak::pak(\"pharmaverse/aNCA\")"},{"path":"https://pharmaverse.github.io/aNCA/index.html","id":"via-cloning-the-repository-for-contributors","dir":"","previous_headings":"Installation","what":"Via cloning the repository (for contributors)","title":"(Pre-)Clinical NCA in a Dynamic Shiny App","text":"Alternatively, can set package cloning repository terminal/shell: loading directly using devtools IDE (e.g. RStudio) console:","code":"git clone https://github.com/pharmaverse/aNCA.git devtools::load_all()"},{"path":"https://pharmaverse.github.io/aNCA/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"(Pre-)Clinical NCA in a Dynamic Shiny App","text":"run application, simply invoke: testing data automatically loaded upon application startup. can provide dataset data tab. can also specify pre-processing filters. NCA tab, start loading pre-processed data using Submit button. also need choose dose number Settings. , able run NCA analysis. , can also specify different analysis options, like applying flag rule sets selecting slopes. setup done analysis performed, free explore results Outputs tab. Application supports various customizable plots, well report exporting. detailed instructions, check Get Started page.","code":"aNCA::run_app()"},{"path":[]},{"path":"https://pharmaverse.github.io/aNCA/index.html","id":"as-developer","dir":"","previous_headings":"Contributing","what":"As developer","title":"(Pre-)Clinical NCA in a Dynamic Shiny App","text":"ensure clean codebase smooth cooperation, please adhere contributing guidelines.","code":""},{"path":"https://pharmaverse.github.io/aNCA/index.html","id":"as-user","dir":"","previous_headings":"Contributing","what":"As user","title":"(Pre-)Clinical NCA in a Dynamic Shiny App","text":"Feel free open identified issues, reach us questions report google sheet feedback.","code":""},{"path":"https://pharmaverse.github.io/aNCA/index.html","id":"documentation-and-references","dir":"","previous_headings":"","what":"Documentation and references","title":"(Pre-)Clinical NCA in a Dynamic Shiny App","text":"Please go Website information aNCA app (still development). main package used App PKNCA. can find GitHub","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_c1.html","id":null,"dir":"Reference","previous_headings":"","what":"This function imputes the start concentration using the first concentration after dose — PKNCA_impute_method_start_c1","title":"This function imputes the start concentration using the first concentration after dose — PKNCA_impute_method_start_c1","text":"function imputes start concentration using first concentration dose","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_c1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function imputes the start concentration using the first concentration after dose — PKNCA_impute_method_start_c1","text":"","code":"PKNCA_impute_method_start_c1(conc, time, start, end, ..., options = list())"},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_c1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function imputes the start concentration using the first concentration after dose — PKNCA_impute_method_start_c1","text":"conc Numeric vector concentrations. time Numeric vector times corresponding concentrations. start Numeric value indicating start/dose time. end Numeric value indicating end time. ... Additional arguments (currently used). options List options (currently used).","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_c1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function imputes the start concentration using the first concentration after dose — PKNCA_impute_method_start_c1","text":"data frame imputed start concentration.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_c1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function imputes the start concentration using the first concentration after dose — PKNCA_impute_method_start_c1","text":"function adheres structure required PKNCA package work functionalities.information, see PKNCA Data Imputation Vignette.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_c1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function imputes the start concentration using the first concentration after dose — PKNCA_impute_method_start_c1","text":"","code":"conc <- c(1, 2, 3, 4, 5) time <- c(1, 2, 3, 4, 5) start <- 0 end <- 4 PKNCA_impute_method_start_c1(conc, time, start, end) #>   conc time #> 6    1    0 #> 1    1    1 #> 2    2    2 #> 3    3    3 #> 4    4    4 #> 5    5    5"},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_logslope.html","id":null,"dir":"Reference","previous_headings":"","what":"This function imputes the start concentration using the log slope method. — PKNCA_impute_method_start_logslope","title":"This function imputes the start concentration using the log slope method. — PKNCA_impute_method_start_logslope","text":"function imputes start concentration using log slope method.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_logslope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function imputes the start concentration using the log slope method. — PKNCA_impute_method_start_logslope","text":"","code":"PKNCA_impute_method_start_logslope(   conc,   time,   start,   end,   ...,   options = list() )"},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_logslope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function imputes the start concentration using the log slope method. — PKNCA_impute_method_start_logslope","text":"conc Numeric vector concentrations. time Numeric vector times corresponding concentrations. start Numeric value indicating start/dose time. end Numeric value indicating end time. ... Additional arguments (currently used). options List options (currently used).","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_logslope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function imputes the start concentration using the log slope method. — PKNCA_impute_method_start_logslope","text":"data frame imputed start concentration.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_logslope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function imputes the start concentration using the log slope method. — PKNCA_impute_method_start_logslope","text":"function adheres structure required PKNCA package work functionalities. information, see PKNCA Data Imputation Vignette.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/PKNCA_impute_method_start_logslope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function imputes the start concentration using the log slope method. — PKNCA_impute_method_start_logslope","text":"","code":"conc <- c(5, 4, 3, 2, 1) time <- c(1, 2, 3, 4, 5) start <- 0 end <- 4 PKNCA_impute_method_start_logslope(conc, time, start, end) #>   conc time #> 6 6.25    0 #> 1 5.00    1 #> 2 4.00    2 #> 3 3.00    3 #> 4 2.00    4 #> 5 1.00    5"},{"path":"https://pharmaverse.github.io/aNCA/reference/anonymize_pk_data.html","id":null,"dir":"Reference","previous_headings":"","what":"This function anonymizes RO numbers and Study IDs of pk data files. — anonymize_pk_data","title":"This function anonymizes RO numbers and Study IDs of pk data files. — anonymize_pk_data","text":"function anonymizes RO numbers Study IDs pk data files.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/anonymize_pk_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function anonymizes RO numbers and Study IDs of pk data files. — anonymize_pk_data","text":"","code":"anonymize_pk_data(path, drug_map = NULL, overwrite = TRUE)"},{"path":"https://pharmaverse.github.io/aNCA/reference/anonymize_pk_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function anonymizes RO numbers and Study IDs of pk data files. — anonymize_pk_data","text":"path path dataframe xpt, sas csv format drug_map set NULL overwrite decides whether file input location path overwritten. default TRUE","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/anonymize_pk_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function anonymizes RO numbers and Study IDs of pk data files. — anonymize_pk_data","text":"anonymized dataframe file","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/anonymize_pk_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function anonymizes RO numbers and Study IDs of pk data files. — anonymize_pk_data","text":"Pascal Bärtschi","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Filters to a Dataset — apply_filters","title":"Apply Filters to a Dataset — apply_filters","text":"function applies set filters dataset. filter specifies column, condition, value filter dataset.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Filters to a Dataset — apply_filters","text":"","code":"apply_filters(data, filters)"},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Filters to a Dataset — apply_filters","text":"data data frame containing raw data filtered. filters list filters, filter list containing column, condition, value.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Filters to a Dataset — apply_filters","text":"data frame containing filtered data.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_filters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Filters to a Dataset — apply_filters","text":"function iterates list filters applies filter dataset. supported conditions ==, >, <, >=, <=.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_filters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Filters to a Dataset — apply_filters","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage:   data <- mtcars   filters <- list(     list(column = \"mpg\", condition = \">\", value = \"20\"),     list(column = \"cyl\", condition = \"==\", value = \"6\")   )   filtered_data <- apply_filters(data, filters) } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Labels to a dataset — apply_labels","title":"Apply Labels to a dataset — apply_labels","text":"function adds \"label\" attributes columns dataset","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Labels to a dataset — apply_labels","text":"","code":"apply_labels(data, labels_df, type)"},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Labels to a dataset — apply_labels","text":"data dataset labels applied. labels_df data frame three columns: Variable, Label, Dataset, dataset applying . type type variable labels_df labels applied.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Labels to a dataset — apply_labels","text":"dataset label attributes applied columns. column present labels list, assigned name col.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/apply_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Labels to a dataset — apply_labels","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage:   data <- data.frame(USUBJID = c(1, 2, 3), AVAL = c(4, 5, 6))   labels <- data.frame(   Variable = c(\"USUBJID\", \"AVAL\"),   Label = c(\"Unique Subject Identifier\", \"Analysis Value\")   )   data <- apply_labels(data, labels)   print(attr(data$A, \"label\")) } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/as_factor_preserve_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Factor While Preserving Label — as_factor_preserve_label","title":"Convert to Factor While Preserving Label — as_factor_preserve_label","text":"function converts vector factor preserving \"label\" attribute.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/as_factor_preserve_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Factor While Preserving Label — as_factor_preserve_label","text":"","code":"as_factor_preserve_label(x)"},{"path":"https://pharmaverse.github.io/aNCA/reference/as_factor_preserve_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Factor While Preserving Label — as_factor_preserve_label","text":"x vector converted factor.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/as_factor_preserve_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to Factor While Preserving Label — as_factor_preserve_label","text":"factor original \"label\" attribute preserved.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/as_factor_preserve_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to Factor While Preserving Label — as_factor_preserve_label","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage:   vec <- c(\"A\", \"B\", \"C\")   attr(vec, \"label\") <- \"Example Label\"   factor_vec <- as_factor_preserve_label(vec)   print(factor_vec)   print(attr(factor_vec, \"label\")) } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/calculate_summary_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Summary Statistics — calculate_summary_stats","title":"Calculate Summary Statistics — calculate_summary_stats","text":"function calculates various summary statistics formatted output PKNCA::pk.nca().","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/calculate_summary_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Summary Statistics — calculate_summary_stats","text":"","code":"calculate_summary_stats(data, input_groups = \"DOSNO\")"},{"path":"https://pharmaverse.github.io/aNCA/reference/calculate_summary_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Summary Statistics — calculate_summary_stats","text":"input_groups character vector specifying columns group . . hierarchical order matters res_pknca data frame containing results Non Compartmental Analysis using PKNCA package","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/calculate_summary_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Summary Statistics — calculate_summary_stats","text":"data frame summary statistics group parameter.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/calculate_summary_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Summary Statistics — calculate_summary_stats","text":"function calculates following statistics numeric variables: Geometric mean (geomean) Geometric coefficient variation (geocv) Arithmetic mean (mean) Standard deviation (sd) Minimum value (min) Maximum value (max) Median value (median) Count missing values (count.missing) Count (count) resulting summary statistics rounded three decimal places.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/calculate_summary_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Summary Statistics — calculate_summary_stats","text":"","code":"if (FALSE) { # \\dontrun{ data <- data.frame( DOSNO = c(1, 1, 1, 1, 1, 1), PPTESTCD = c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\"), PPSTRES = c(10, 20, 5, 15, NA, 30), PPSTRESU = c(\"mg/L\", \"mg/L\", \"ng/mL\", \"ng/mL\", \"µg/L\", \"µg/L\") ) calculate_summary_stats(data) } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/check_slope_rule_overlap.html","id":null,"dir":"Reference","previous_headings":"","what":"Check overlap between existing and new slope rulesets — check_slope_rule_overlap","title":"Check overlap between existing and new slope rulesets — check_slope_rule_overlap","text":"Takes tables existing incoming selections exclusions, finds overlap differences, edits ruleset table accordingly.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/check_slope_rule_overlap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check overlap between existing and new slope rulesets — check_slope_rule_overlap","text":"","code":"check_slope_rule_overlap(existing, new, slope_groups, .keep = FALSE)"},{"path":"https://pharmaverse.github.io/aNCA/reference/check_slope_rule_overlap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check overlap between existing and new slope rulesets — check_slope_rule_overlap","text":"existing Data frame existing selections exclusions. new Data frame new rule added removed. slope_groups List column names define groups. .keep Whether force keep fully overlapping rulesets. FALSE, assumed user wants remove rule new range already exists dataset. TRUE, case full range kept.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/check_slope_rule_overlap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check overlap between existing and new slope rulesets — check_slope_rule_overlap","text":"Data frame full ruleset, adjusted new rules.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/create_start_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Create C0 Impute Column — create_start_impute","title":"Create C0 Impute Column — create_start_impute","text":"Defines impute column intervals PKNCAdata object based data","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/create_start_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create C0 Impute Column — create_start_impute","text":"","code":"create_start_impute(mydata)"},{"path":"https://pharmaverse.github.io/aNCA/reference/create_start_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create C0 Impute Column — create_start_impute","text":"mydata PKNCAdata object containing concentration dose data.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/create_start_impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create C0 Impute Column — create_start_impute","text":"PKNCAdata object updated intervals table including start imputation strategies.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/create_start_impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create C0 Impute Column — create_start_impute","text":"","code":"if (FALSE) { # \\dontrun{ mydata <- create_start_impute(mydata) } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/dose_profile_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Create duplicates in concentration data with Pre-dose and Last Values for Dosing Cycles — dose_profile_duplicates","title":"Create duplicates in concentration data with Pre-dose and Last Values for Dosing Cycles — dose_profile_duplicates","text":"function duplicates adjusts concentration data ensure dosing cycles complete pre-dose last concentration values. designed use pharmacokinetic analyses dosing intervals concentration values need aligned dose.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dose_profile_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create duplicates in concentration data with Pre-dose and Last Values for Dosing Cycles — dose_profile_duplicates","text":"","code":"dose_profile_duplicates(   conc_data,   groups = c(\"USUBJID\", \"DOSNO\", \"ANALYTE\"),   dosno = \"DOSNO\",   arrlt = \"ARRLT\",   afrlt = \"AFRLT\",   nrrlt = \"NRRLT\",   nfrlt = \"NFRLT\" )"},{"path":"https://pharmaverse.github.io/aNCA/reference/dose_profile_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create duplicates in concentration data with Pre-dose and Last Values for Dosing Cycles — dose_profile_duplicates","text":"conc_data data frame containing concentration data. groups character vector column names use grouping (e.g., c(\"USUBJID\", \"ANALYTE\", \"DOSNO\")). dosno Column name dose number (default: \"DOSNO\"). arrlt Column name time recent dose. afrlt Column name time first dose. nrrlt Column name numeric relative time. nfrlt Column name nominal relative time.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dose_profile_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create duplicates in concentration data with Pre-dose and Last Values for Dosing Cycles — dose_profile_duplicates","text":"data frame adjusted concentration data, including: Duplicated pre-dose values assigned previous dose. Duplicated last values assigned next dose pre-dose values missing, filtered samples within 24 hours next dose included. Sorted grouping variables relative time.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dose_profile_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create duplicates in concentration data with Pre-dose and Last Values for Dosing Cycles — dose_profile_duplicates","text":"","code":"# Example usage conc_data <- data.frame( USUBJID = c(\"001\", \"001\", \"001\", \"001\", \"001\", \"001\", \"001\", \"001\", \"001\", \"001\"), AVAL = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), DOSNO = c(1, 1, 1, 2, 2, 2, 2, 3, 3, 3), ARRLT = c(-1, 0, 1, -1, 0, 1, 2, 0, 1, 2), AFRLT = c(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8), NRRLT = c(-1, 0, 1, -1, 0, 1, 2, 0, 1, 2), NFRLT = c(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8) ) result <- dose_profile_duplicates(conc_data,                             groups = c(\"USUBJID\", \"DOSNO\"), dosno = \"DOSNO\")"},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-apply_slope_rules.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Slope Rules to Update Data — .apply_slope_rules","title":"Apply Slope Rules to Update Data — .apply_slope_rules","text":"function iterates given slopes updates data$conc$data object setting inclusion exclusion flags based slope conditions.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-apply_slope_rules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Slope Rules to Update Data — .apply_slope_rules","text":"","code":".apply_slope_rules(data, slopes, slope_groups)"},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-apply_slope_rules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Slope Rules to Update Data — .apply_slope_rules","text":"data list containing concentration data (data$conc$data) columns need updated based slope rules. slopes data frame containing slope rules, including TYPE, RANGE, REASON columns. slope_groups character vector specifying group columns used filtering.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-apply_slope_rules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Slope Rules to Update Data — .apply_slope_rules","text":"description modified data object updated inclusion/exclusion flags reasons data$conc$data.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-compress_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Compresses a numeric vector into the simplest possible character string that, when evaluated, will create the same numeric vector. — .compress_range","title":"Compresses a numeric vector into the simplest possible character string that, when evaluated, will create the same numeric vector. — .compress_range","text":"Compresses numeric vector simplest possible character string , evaluated, create numeric vector.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-compress_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compresses a numeric vector into the simplest possible character string that, when evaluated, will create the same numeric vector. — .compress_range","text":"","code":".compress_range(range_vector)"},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-compress_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compresses a numeric vector into the simplest possible character string that, when evaluated, will create the same numeric vector. — .compress_range","text":"range_vector numeric vector numbers compress string","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-compress_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compresses a numeric vector into the simplest possible character string that, when evaluated, will create the same numeric vector. — .compress_range","text":"simplest possible character string representing provided vector","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-compress_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compresses a numeric vector into the simplest possible character string that, when evaluated, will create the same numeric vector. — .compress_range","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage .compress_range(c(1, 2, 3, 4)) # \"1:4\" .compress_range(c(15, 1, 11, 4, 5, 10, 2, 12, 3)) # \"1:5,10:12,15\" } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-eval_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluates range notation. If provided notation is invalid, returns NA. — .eval_range","title":"Evaluates range notation. If provided notation is invalid, returns NA. — .eval_range","text":"Evaluates range notation. provided notation invalid, returns NA.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-eval_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluates range notation. If provided notation is invalid, returns NA. — .eval_range","text":"","code":".eval_range(x)"},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-eval_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluates range notation. If provided notation is invalid, returns NA. — .eval_range","text":"x character string range notation, e.g. 1:5.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-eval_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluates range notation. If provided notation is invalid, returns NA. — .eval_range","text":"numeric vector specified range numbers, NA notation invalid","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-eval_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluates range notation. If provided notation is invalid, returns NA. — .eval_range","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage .eval_range(\"1:5\") # c(1, 2, 3, 4, 5) .eval_range(\"5,3:1,15\") # c(5, 3, 2, 1, 15) } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-extract_exclude_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to extract exclude values — .extract_exclude_values","title":"Helper function to extract exclude values — .extract_exclude_values","text":"Helper function extract exclude values","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-extract_exclude_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to extract exclude values — .extract_exclude_values","text":"","code":".extract_exclude_values(...)"},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-plotly_empty_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an Empty Plotly Object — .plotly_empty_plot","title":"Generate an Empty Plotly Object — .plotly_empty_plot","text":"function returns blank Plotly plot optional annotation text. ensures valid data available, meaningful placeholder plot displayed instead causing error.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-plotly_empty_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an Empty Plotly Object — .plotly_empty_plot","text":"","code":".plotly_empty_plot(message = \"No data available\")"},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-plotly_empty_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an Empty Plotly Object — .plotly_empty_plot","text":"message character string specifying text display center empty plot. Defaults \"data available\".","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/dot-plotly_empty_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an Empty Plotly Object — .plotly_empty_plot","text":"Plotly object representing empty plot hidden axes.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/export_cdisc.html","id":null,"dir":"Reference","previous_headings":"","what":"Export CDISC Data — export_cdisc","title":"Export CDISC Data — export_cdisc","text":"function processes results PKNCA exports CDISC compliant datasets. Attention: parameters match pptest dataframe lost pipeline!","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/export_cdisc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export CDISC Data — export_cdisc","text":"","code":"export_cdisc(res_nca)"},{"path":"https://pharmaverse.github.io/aNCA/reference/export_cdisc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export CDISC Data — export_cdisc","text":"list two data frames: pp data frame containing PP (Pharmacokinetic Parameters) domain data. adpp data frame containing ADPP (Analysis Dataset Pharmacokinetic Parameters) domain data.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/export_cdisc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export CDISC Data — export_cdisc","text":"Outputs following: pknca_result Output function call pk.nca() (formatted) pknca_result_raw Output function call pk.nca() (needs merged upper later now avoid merge conflict)","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/filter_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Breaks for X-Axis — filter_breaks","title":"Filter Breaks for X-Axis — filter_breaks","text":"Filters X-axis consecutive breaks least specified distance.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/filter_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Breaks for X-Axis — filter_breaks","text":"","code":"filter_breaks(breaks = NA, plot = plot, min_cm_distance = 0.5, axis = \"x\")"},{"path":"https://pharmaverse.github.io/aNCA/reference/filter_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Breaks for X-Axis — filter_breaks","text":"plot ggplot object used extract plot dimensions scales. min_cm_distance numeric minimum distance breaks. x_breaks numeric vector x-axis breaks.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/filter_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Breaks for X-Axis — filter_breaks","text":"numeric vector filtered x-axis breaks.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/filter_breaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter Breaks for X-Axis — filter_breaks","text":"Gerardo Rodriguez","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/filter_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter dataset based on slope selections and exclusions — filter_slopes","title":"Filter dataset based on slope selections and exclusions — filter_slopes","text":"function filters main dataset based provided slope selections exclusions.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/filter_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter dataset based on slope selections and exclusions — filter_slopes","text":"","code":"filter_slopes(data, slopes, profiles, slope_groups)"},{"path":"https://pharmaverse.github.io/aNCA/reference/filter_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter dataset based on slope selections and exclusions — filter_slopes","text":"data Data filter. Must PKNCAdata list, containing conc element PKNCAconc list appropriate data frame included data. slopes Data frame slopes selection rules, must contain following columns: TYPE, PATIENT, PROFILE, RANGE, REASON. profiles List available profiles PATIENT. slope_groups List column names define groups.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/filter_slopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter dataset based on slope selections and exclusions — filter_slopes","text":"Original dataset, .included.hl, .excluded.hl exclude_half.life columns modified accordance provided slope filters.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/flexible_violinboxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexible Violin/Box Plot — flexible_violinboxplot","title":"Flexible Violin/Box Plot — flexible_violinboxplot","text":"function generates  violin box plot based provided data, parameter, dose information.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/flexible_violinboxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexible Violin/Box Plot — flexible_violinboxplot","text":"","code":"flexible_violinboxplot(   boxplotdata,   parameter,   xvars,   colorvars,   varvalstofilter,   columns_to_hover,   box = TRUE )"},{"path":"https://pharmaverse.github.io/aNCA/reference/flexible_violinboxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexible Violin/Box Plot — flexible_violinboxplot","text":"parameter string specifying parameter plotted. columns_to_hover character vector indicating column names result_data used identify hovering plotly outputs box logical value indicating whether plot box plot (TRUE) violin plot (FALSE). Default TRUE. result_data list containing data plotted. data element dose information formatted element data plotted. doses_included vector doses included plot. dosenumber_included vector dose numbers included plot.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/flexible_violinboxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexible Violin/Box Plot — flexible_violinboxplot","text":"plotly object representing violin box plot.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncaconc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create PK Concentration Dataset — format_pkncaconc_data","title":"Create PK Concentration Dataset — format_pkncaconc_data","text":"function creates pharmacokinetic concentration dataset provided ADNCA data.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncaconc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create PK Concentration Dataset — format_pkncaconc_data","text":"","code":"format_pkncaconc_data(   ADNCA,   group_columns,   time_column = \"AFRLT\",   dosno_column = \"DOSNO\" )"},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncaconc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create PK Concentration Dataset — format_pkncaconc_data","text":"ADNCA data frame containing ADNCA data. analyte character string specifying analyte interest.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncaconc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create PK Concentration Dataset — format_pkncaconc_data","text":"data frame containing filtered processed concentration data.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncaconc_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create PK Concentration Dataset — format_pkncaconc_data","text":"function performs following steps: Creates 'groups' column concatenating 'USUBJID' 'DOSNO'. Arranges groups data groups_column. Adds index column ('IX') 1:n within group length n.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncaconc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create PK Concentration Dataset — format_pkncaconc_data","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage:   conc_data <- format_pkncaconc_data(ADNCA, \"analyte_name\", \"profile_type\") } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadata_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Dose Intervals Dataset — format_pkncadata_intervals","title":"Create Dose Intervals Dataset — format_pkncadata_intervals","text":"function creates dataset dose intervals specified pharmacokinetic parameters.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadata_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Dose Intervals Dataset — format_pkncadata_intervals","text":"","code":"format_pkncadata_intervals(   pknca_conc,   pknca_dose,   params = c(\"aucinf.obs\", \"aucint.last\", \"auclast\", \"cmax\", \"half.life\", \"tmax\",     \"lambda.z\", \"lambda.z.n.points\", \"r.squared\", \"adj.r.squared\", \"lambda.z.time.first\",     \"aucpext.obs\", \"aucpext.pred\", \"clast.obs\", \"cl.obs\"),   start_from_last_dose = TRUE )"},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadata_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Dose Intervals Dataset — format_pkncadata_intervals","text":"pknca_conc PKNCAdose object containing concentration data. pknca_dose PKNCAdose object containing dose data. params character vector specifying pharmacokinetic parameters include. start_from_last_dose Logical defining start time last dose C1.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadata_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Dose Intervals Dataset — format_pkncadata_intervals","text":"data frame containing dose intervals specified pharmacokinetic parameters.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadata_intervals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Dose Intervals Dataset — format_pkncadata_intervals","text":"function performs following steps: Creates vector pharmacokinetic parameters. Based dose times, creates data frame start end times. Adds logical columns specified parameter.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadata_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Dose Intervals Dataset — format_pkncadata_intervals","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage:   dose_intervals <- format_pkncadata_intervals(pknca_conc, pknca_dose, params) } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadose_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create PK Dose Dataset — format_pkncadose_data","title":"Create PK Dose Dataset — format_pkncadose_data","text":"function creates pharmacokinetic dose dataset provided concentration data.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadose_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create PK Dose Dataset — format_pkncadose_data","text":"","code":"format_pkncadose_data(   pkncaconc_data,   group_columns,   dosno_column = NULL,   time_column = \"AFRLT\",   since_lastdose_time_column = \"ARRLT\" )"},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadose_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create PK Dose Dataset — format_pkncadose_data","text":"pkncaconc_data data frame containing concentration data. group_columns character vector specifying columns group . dosno_column character string specifying dose number column. time_column character string specifying time column. since_lastdose_time_column character string specifying time since last dose column.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadose_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create PK Dose Dataset — format_pkncadose_data","text":"data frame containing dose data.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/format_pkncadose_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create PK Dose Dataset — format_pkncadose_data","text":"function performs following steps: Arranges groups data group_columns Derives dose time : time_column - since_lastdose_time_column Selects first row within group (arranged since_lastdose_time_column)","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/g_pkconc_ind_lin.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around aNCA::pkcg01() function. Calls the function with LIN scale argument. — g_pkconc_ind_lin","title":"Wrapper around aNCA::pkcg01() function. Calls the function with LIN scale argument. — g_pkconc_ind_lin","text":"Wrapper around aNCA::pkcg01() function. Calls function LIN scale argument.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/g_pkconc_ind_lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around aNCA::pkcg01() function. Calls the function with LIN scale argument. — g_pkconc_ind_lin","text":"","code":"g_pkconc_ind_lin(data, ...)"},{"path":"https://pharmaverse.github.io/aNCA/reference/g_pkconc_ind_lin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around aNCA::pkcg01() function. Calls the function with LIN scale argument. — g_pkconc_ind_lin","text":"data Data passed plotting function. ... parameters passed plotting function.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/g_pkconc_ind_lin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper around aNCA::pkcg01() function. Calls the function with LIN scale argument. — g_pkconc_ind_lin","text":"ggplot2 object pkcg01.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/g_pkconc_ind_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around aNCA::pkcg01() function. Calls the function with LOG scale argument. — g_pkconc_ind_log","title":"Wrapper around aNCA::pkcg01() function. Calls the function with LOG scale argument. — g_pkconc_ind_log","text":"Wrapper around aNCA::pkcg01() function. Calls function LOG scale argument.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/g_pkconc_ind_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around aNCA::pkcg01() function. Calls the function with LOG scale argument. — g_pkconc_ind_log","text":"","code":"g_pkconc_ind_log(data, ...)"},{"path":"https://pharmaverse.github.io/aNCA/reference/g_pkconc_ind_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around aNCA::pkcg01() function. Calls the function with LOG scale argument. — g_pkconc_ind_log","text":"data Data passed plotting function. ... parameters passed plotting function.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/g_pkconc_ind_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper around aNCA::pkcg01() function. Calls the function with LOG scale argument. — g_pkconc_ind_log","text":"ggplot2 object pkcg01.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/general_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a General Line Plot for ADNCA Dataset — general_lineplot","title":"Generate a General Line Plot for ADNCA Dataset — general_lineplot","text":"function generates line plot ADNCA dataset based user-selected analytes, subjects, parameters. plot can customized display data linear logarithmic scale can filtered cycle.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/general_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a General Line Plot for ADNCA Dataset — general_lineplot","text":"","code":"general_lineplot(   data,   selected_analytes,   selected_pcspec,   selected_usubjids,   colorby_var,   time_scale,   yaxis_scale,   cycle = NULL )"},{"path":"https://pharmaverse.github.io/aNCA/reference/general_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a General Line Plot for ADNCA Dataset — general_lineplot","text":"data data frame containing ADNCA dataset. selected_analytes character vector selected analytes included plot. selected_pcspec character vector selected matrix included plot. selected_usubjids character vector selected unique subject identifiers (USUBJIDs) included plot. colorby_var character string specifying variable color lines plot. time_scale character string specifying time scale. Options \"Cycle\" values. yaxis_scale character string specifying x-axis scale. Options \"Log\" values. cycle character string numeric value specifying cycle filter time_scale \"Cycle\". Default NULL.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/general_lineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a General Line Plot for ADNCA Dataset — general_lineplot","text":"ggplot object representing line plot pharmacokinetic concentration time.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/general_lineplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a General Line Plot for ADNCA Dataset — general_lineplot","text":"function performs following steps:Filters data based selected analytes, matrices, subjects. Selects relevant columns removes rows missing concentration values. Converts 'USUBJID', 'DOSNO', 'DOSEA' factors. Filters data cycle time_scale \"Cycle\". Adjusts concentration values logarithmic scale yaxis_scale \"Log\". Generates line plot using g_ipp function specified parameters. Adjusts y-axis logarithmic scale yaxis_scale \"Log\".","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/general_lineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a General Line Plot for ADNCA Dataset — general_lineplot","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage:   plot <- general_lineplot(data = adnca_data,                            selected_analytes = c(\"Analyte1\", \"Analyte2\"),                            selected_pcspec = c(\"Spec1\", \"Spec2\"),                            selected_usubjids = c(\"Subject1\", \"Subject2\"),                            colorby_var = \"DOSNO\",                            time_scale = \"By Cycle\",                            yaxis_scale = \"Log\",                            cycle = \"1\")   print(plot) } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/general_meanplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Mean Concentration Plot for ADNCA Dataset — general_meanplot","title":"Generate a Mean Concentration Plot for ADNCA Dataset — general_meanplot","text":"function generates mean concentration plot ADNCA dataset based user-selected study IDs, analytes, cycles. plot can customized display data linear logarithmic scale can optionally include standard deviation error bars.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/general_meanplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Mean Concentration Plot for ADNCA Dataset — general_meanplot","text":"","code":"general_meanplot(   data,   selected_studyids,   selected_analytes,   selected_pcspecs,   selected_cycles,   id_variable = \"DOSEA\",   plot_ylog = FALSE,   plot_sd = FALSE,   plot_ci = FALSE )"},{"path":"https://pharmaverse.github.io/aNCA/reference/general_meanplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Mean Concentration Plot for ADNCA Dataset — general_meanplot","text":"data data frame containing ADNCA dataset. selected_studyids character vector selected study IDs included plot. selected_analytes character vector selected analytes included plot. selected_pcspecs character vector selected matrices included plot. selected_cycles character vector numeric vector selected cycles included plot. id_variable character string specifying variable color lines plot. Default \"DOSEA\". plot_ylog logical value indicating whether use logarithmic scale y-axis. Default FALSE. plot_sd logical value indicating whether include standard deviation error bars. Default FALSE. plot_ci logical value indicating whether include confidence interval 95% ribbon. Default FALSE.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/general_meanplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Mean Concentration Plot for ADNCA Dataset — general_meanplot","text":"ggplot object representing mean concentration plot.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/geometric_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function: Calculate the Geometric Mean — geometric_mean","title":"Helper Function: Calculate the Geometric Mean — geometric_mean","text":"Helper Function: Calculate Geometric Mean","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/geometric_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function: Calculate the Geometric Mean — geometric_mean","text":"","code":"geometric_mean(x, na.rm = FALSE)"},{"path":"https://pharmaverse.github.io/aNCA/reference/geometric_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function: Calculate the Geometric Mean — geometric_mean","text":"x numeric vector. na.rm logical value indicating whether NA values removed.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/geometric_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function: Calculate the Geometric Mean — geometric_mean","text":"geometric mean input vector.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/get_conversion_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Units — get_conversion_factor","title":"Transform Units — get_conversion_factor","text":"function transforms value initial unit target unit.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/get_conversion_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Units — get_conversion_factor","text":"","code":"get_conversion_factor(initial_unit, target_unit)"},{"path":"https://pharmaverse.github.io/aNCA/reference/get_conversion_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Units — get_conversion_factor","text":"initial_unit character string representing initial unit. target_unit character string representing target unit.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/get_conversion_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Units — get_conversion_factor","text":"numeric value conversion factor initial target unit, NA units convertible.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/get_conversion_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Units — get_conversion_factor","text":"","code":"get_conversion_factor(\"meter\", \"kilometer\") #> [1] 0.001 get_conversion_factor(\"sec\", \"min\") #> [1] 0.01666667"},{"path":"https://pharmaverse.github.io/aNCA/reference/get_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Label of a Heading — get_label","title":"Get the Label of a Heading — get_label","text":"function retrieves label heading labels file.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/get_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Label of a Heading — get_label","text":"","code":"get_label(labels_df, variable, type)"},{"path":"https://pharmaverse.github.io/aNCA/reference/get_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Label of a Heading — get_label","text":"labels_df data frame three columns: Variable, Label, Dataset. variable variable label retrieved. type type dataset label retrieved.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/get_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Label of a Heading — get_label","text":"label heading exists labels file, otherwise \"label available\".","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/get_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Label of a Heading — get_label","text":"","code":"if (FALSE) { # \\dontrun{  # Example usage:  LABELS <- data.frame(  Variable = c(\"USUBJID\", \"AVAL\"),  Label = c(\"Unique Subject Identifier\", \"Analysis Value\"),  Dataset = c(\"ADPC\", \"ADPC\")  )  get_label(LABELS, \"USUBJID\", \"ADPC\")  # Returns \"Unique Subject Identifier\"  get_label(LABELS, \"AGE\", \"ADPC\")  # Returns \"No label available\"  } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/has_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Vector Has a Label — has_label","title":"Check if a Vector Has a Label — has_label","text":"function checks vector \"label\" attribute.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/has_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Vector Has a Label — has_label","text":"","code":"has_label(x)"},{"path":"https://pharmaverse.github.io/aNCA/reference/has_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Vector Has a Label — has_label","text":"x vector checked \"label\" attribute.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/has_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Vector Has a Label — has_label","text":"logical value indicating whether vector \"label\" attribute.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/has_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Vector Has a Label — has_label","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage:   vec <- c(\"A\", \"B\", \"C\")   attr(vec, \"label\") <- \"Example Label\"   has_label(vec)  # Returns TRUE } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/l_pkconc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create PK Concentration Listing — l_pkconc","title":"Create PK Concentration Listing — l_pkconc","text":"function creates listing pharmacokinetic (PK) concentration data segregating dataset lists customizable title, footnotes, grouping/displayed variables, missing/zero values /number digits displayed.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/l_pkconc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create PK Concentration Listing — l_pkconc","text":"","code":"l_pkconc(   data,   listgroup_vars = c(\"PARAM\", \"PCSPEC\", \"ROUTE\"),   grouping_vars = c(\"TRT01A\", \"USUBJID\", \"AVISIT\"),   displaying_vars = c(\"NFRLT\", \"AFRLT\", \"AVAL\"),   formatting_vars_table = NULL,   title = paste0(\"Listing of PK Concentration by Treatment Group,\",     \"Subject and Nominal Time, PK Population\"),   subtitle = NULL,   footnote = \"*: Patients excluded from the summary table and mean plots\" )"},{"path":"https://pharmaverse.github.io/aNCA/reference/l_pkconc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create PK Concentration Listing — l_pkconc","text":"data data frame containing PK concentration data. listgroup_vars character vector specifying variables separate lists. grouping_vars character vector specifying grouping variables within list. displaying_vars character vector specifying variables display listing. formatting_vars_table data frame formatting variable. See details. title character string parse specifying main title entire listing. subtitle character string parse specifying subtitle use list. footnote character string parse specifying footnote listing table.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/l_pkconc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create PK Concentration Listing — l_pkconc","text":"list listings, corresponding unique combination grouping variables.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/l_pkconc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create PK Concentration Listing — l_pkconc","text":"function performs following steps: Groups data based specified grouping variables. Formats 0 NA values defined formatting table. Creates listing unique combination grouping variables. formatting_vars_table data frame following columns: var_name: name variable. Label: label variable. na_str: string use NA values. zero_str: string use 0 values. align: alignment variable (e.g., \"center\"). format_fun: formatting function use (\"round\" \"signif\"). digits: number digits use numeric formatting.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/l_pkconc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create PK Concentration Listing — l_pkconc","text":"Gerardo Rodriguez","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/l_pkconc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create PK Concentration Listing — l_pkconc","text":"","code":"# Create a sample dataframe 'data' with the required variables   set.seed(123)   data <- data.frame(     PARAM = rep(c(\"Param1\", \"Param2\"), each = 6),     PCSPEC = rep(c(\"Blood\", \"Urine\"), each = 6),     TRT01A = rep(c(\"Treatment1\", \"Treatment2\"), each = 6),     USUBJID = rep(c(rep(1, 3), rep(2, 3)), 2),     NFRLT = rep(1:3, 4),     AFRLT = rep(1:3, 4) + runif(12, 0, 0.5),     TIMEU = \"hours\",     AVAL = rep(0:2, 4) + runif(12, 0, 0.5),     AVALU = \"mg/L\"   )    # Define the formatting table   formatting_vars_table <- data.frame(var_name = names(data),                                       Label = c(\"Parameter\", \"Specimen\", \"Treatment Arm\",                                                 \"Unique Subject ID\", \"Norminal Time ($TIMEU)\",                                                 \"Actual Time ($TIMEU)\", \"Time Unit\",                                                 \"Analyte Value ($AVALU)\", \"Analyte Unit\"),                                       na_str = \"Missing\",                                       zero_str = c(rep(\"0\", 7), \"BLQ\", \"0\"),                                       align = \"center\",                                       format_fun = c(NA, NA, NA, NA,                                                      \"round\", \"round\", NA, \"round\", NA),                                       digits = c(NA, NA, NA, NA, 2, 2, NA, 3, NA))    # Call the l_pkconc function with the sample data   listing_ex <- l_pkconc(data = data,                          listgroup_vars = c(\"PARAM\", \"PCSPEC\"),                          grouping_vars = c(\"TRT01A\", \"USUBJID\"),                          displaying_vars = c(\"NFRLT\", \"AFRLT\", \"AVAL\"),                          formatting_vars_table = formatting_vars_table,                          title = \"Listing of PK Concentration\",                          subtitle = \"Patients with !PARAM: $PARAM (!PCSPEC: $PCSPEC)\"                          )   print(listing_ex) #> $Param1.Blood #> Listing of PK Concentration #> Patients with Parameter: Param1 (Specimen: Blood) #>  #> —————————————————————————————————————————————————————————————————————————————————————————————————————— #> Treatment Arm   Unique Subject ID   Norminal Time (hours)   Actual Time (hours)   Analyte Value (mg/L) #> —————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Treatment1             1                     1                    1.14                  0.339         #>                                               2                    2.39                  1.286         #>                                               3                     3.2                  2.051         #>                         2                     1                    1.44                   0.45         #>                                               2                    2.47                  1.123         #>                                               3                    3.02                  2.021         #> —————————————————————————————————————————————————————————————————————————————————————————————————————— #>  #> *: Patients excluded from the summary table and mean plots #>  #> $Param2.Urine #> Listing of PK Concentration #> Patients with Parameter: Param2 (Specimen: Urine) #>  #> —————————————————————————————————————————————————————————————————————————————————————————————————————— #> Treatment Arm   Unique Subject ID   Norminal Time (hours)   Actual Time (hours)   Analyte Value (mg/L) #> —————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Treatment2             1                     1                    1.26                  0.164         #>                                               2                    2.45                  1.477         #>                                               3                    3.28                  2.445         #>                         2                     1                    1.23                  0.346         #>                                               2                    2.48                   1.32         #>                                               3                    3.23                  2.497         #> —————————————————————————————————————————————————————————————————————————————————————————————————————— #>  #> *: Patients excluded from the summary table and mean plots #>"},{"path":"https://pharmaverse.github.io/aNCA/reference/lambda_slope_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Lambda Slope Plot — lambda_slope_plot","title":"Generate a Lambda Slope Plot — lambda_slope_plot","text":"function generates lambda slope plot using pharmacokinetic data. calculates relevant lambda parameters visualizes data points used lambda calculation, along linear regression line additional plot annotations.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/lambda_slope_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Lambda Slope Plot — lambda_slope_plot","text":"","code":"lambda_slope_plot(   conc_pknca_df,   row_values,   myres = myres,   r2adj_threshold = 0.7 )"},{"path":"https://pharmaverse.github.io/aNCA/reference/lambda_slope_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Lambda Slope Plot — lambda_slope_plot","text":"conc_pknca_df Data frame containing concentration data (default mydata$conc$data). row_values list containing values column_names used filtering. (default patient). myres PKNCAresults object containing results NCA analysis r2adj_threshold Numeric value representing R-squared adjusted threshold determining subtitle color (default 0.7).","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/lambda_slope_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Lambda Slope Plot — lambda_slope_plot","text":"plotly object representing lambda slope plot.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/lambda_slope_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Lambda Slope Plot — lambda_slope_plot","text":"function performs following steps: Creates duplicates pre-dose last doses concentration data. Filters arranges input data obtain relevant lambda calculation information. Identifies data points used lambda calculation. Calculates fitness, intercept, time span half-life estimate. Determines subtitle color based R-squared adjusted value half-life estimate. Generates ggplot object relevant data points, linear regression line, annotations. Converts ggplot object plotly object interactive visualization.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/lambda_slope_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Lambda Slope Plot — lambda_slope_plot","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage:   plot <- lambda_slope_plot(conc_pknca_df = mydata$conc$data,                             row_values = list(USUBJID = \"001\", STUDYID = \"A\", DOSENO = 1),                             myres = res_nca,                             r2adj_threshold = 0.7)   plot } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/multiple_matrix_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Matrix Ratios This function calculates the ratios for a given data set, based on the shared time points for each matrix concentration sample. The user can input multiple tissues for which ratios should be calculated. — multiple_matrix_ratios","title":"Calculate Matrix Ratios This function calculates the ratios for a given data set, based on the shared time points for each matrix concentration sample. The user can input multiple tissues for which ratios should be calculated. — multiple_matrix_ratios","text":"ratios calculated specimen1 / specimen 2.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/multiple_matrix_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Matrix Ratios This function calculates the ratios for a given data set, based on the shared time points for each matrix concentration sample. The user can input multiple tissues for which ratios should be calculated. — multiple_matrix_ratios","text":"","code":"multiple_matrix_ratios(   data,   matrix_col,   conc_col,   units_col,   groups = c(\"TIME\", \"USUBJID\"),   spec1,   spec2 )"},{"path":"https://pharmaverse.github.io/aNCA/reference/multiple_matrix_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Matrix Ratios This function calculates the ratios for a given data set, based on the shared time points for each matrix concentration sample. The user can input multiple tissues for which ratios should be calculated. — multiple_matrix_ratios","text":"data data frame containing concentration data. matrix_col character string specifying column name matrix type. conc_col character string specifying column name concentration data. units_col character string specifying column name units. groups character vector grouping variables use analysis. Must include TIME, USUBJID, optionally, grouping variables. spec1 character string specifying value first specimen type(s) matrix_col. spec2 character string specifying value second specimen type(s) matrix_col.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/multiple_matrix_ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Matrix Ratios This function calculates the ratios for a given data set, based on the shared time points for each matrix concentration sample. The user can input multiple tissues for which ratios should be calculated. — multiple_matrix_ratios","text":"data frame containing ratios.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/multiple_matrix_ratios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Matrix Ratios This function calculates the ratios for a given data set, based on the shared time points for each matrix concentration sample. The user can input multiple tissues for which ratios should be calculated. — multiple_matrix_ratios","text":"","code":"data <- data.frame( USUBJID = c(\"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"), TIME = c(0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2), MATRIX = c(\"BLOOD\", \"BLOOD\", \"BLOOD\", \"PLASMA\", \"PLASMA\", \"PLASMA\",            \"BRAIN\", \"BRAIN\", \"BRAIN\", \"LIVER\", \"LIVER\", \"LIVER\"), CONC = c(10, 20, 15, 25, 30, 40, 5, 10, 8, 12, 18, 16), UNITS = rep(\"ng/mL\", 12) ) multiple_matrix_ratios(data, \"MATRIX\", \"CONC\", \"UNITS\", c(\"TIME\", \"USUBJID\"), \"BLOOD\", \"PLASMA\") #> # A tibble: 3 × 7 #> # Rowwise:  #>    TIME USUBJID Ratio_Type   Spec1_Value Spec2_Value Ratio Unit     #>   <dbl> <chr>   <chr>              <dbl>       <dbl>   [1] <chr>    #> 1     0 A       BLOOD/PLASMA          10          25 0.4   unitless #> 2     1 A       BLOOD/PLASMA          20          30 0.667 unitless #> 3     2 A       BLOOD/PLASMA          15          40 0.375 unitless"},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses annotations in the context of data. Special characters and syntax are substituted by actual data and/or substituted for format that is better parsed via rendering functions (e.g. plotly). — parse_annotation","title":"Parses annotations in the context of data. Special characters and syntax are substituted by actual data and/or substituted for format that is better parsed via rendering functions (e.g. plotly). — parse_annotation","text":"Parses annotations context data. Special characters syntax substituted actual data /substituted format better parsed via rendering functions (e.g. plotly).","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses annotations in the context of data. Special characters and syntax are substituted by actual data and/or substituted for format that is better parsed via rendering functions (e.g. plotly). — parse_annotation","text":"","code":"parse_annotation(data, text)"},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses annotations in the context of data. Special characters and syntax are substituted by actual data and/or substituted for format that is better parsed via rendering functions (e.g. plotly). — parse_annotation","text":"data Data frame containing data reference. include columns labels referenced text string. Referenced variables able produce single unique result. text Character text parse.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses annotations in the context of data. Special characters and syntax are substituted by actual data and/or substituted for format that is better parsed via rendering functions (e.g. plotly). — parse_annotation","text":"Parsed annotation text.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_annotation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parses annotations in the context of data. Special characters and syntax are substituted by actual data and/or substituted for format that is better parsed via rendering functions (e.g. plotly). — parse_annotation","text":"\\n character substituted <br> tag order add new lines rendered image. $COLNAME parsed provide unique data value mentioned column. !COLNAME parsed provide label attribute given column name. values missing provided data, substituted ERR string.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_tlg_definitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Parses the tlg definitions described in yaml file into a list object. Custom YAML parsing is needed for templating - the user can define templates for a definition. The function detects appropriate keywords and copies information from specified templates. — parse_tlg_definitions","title":"Parses the tlg definitions described in yaml file into a list object. Custom YAML parsing is needed for templating - the user can define templates for a definition. The function detects appropriate keywords and copies information from specified templates. — parse_tlg_definitions","text":"Parses tlg definitions described yaml file list object. Custom YAML parsing needed templating - user can define templates definition. function detects appropriate keywords copies information specified templates.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_tlg_definitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parses the tlg definitions described in yaml file into a list object. Custom YAML parsing is needed for templating - the user can define templates for a definition. The function detects appropriate keywords and copies information from specified templates. — parse_tlg_definitions","text":"","code":"parse_tlg_definitions(path = NULL, defs = NULL)"},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_tlg_definitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parses the tlg definitions described in yaml file into a list object. Custom YAML parsing is needed for templating - the user can define templates for a definition. The function detects appropriate keywords and copies information from specified templates. — parse_tlg_definitions","text":"path Path YAML file containing TLG definitions. defs list TLG definitions read YAML file.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_tlg_definitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parses the tlg definitions described in yaml file into a list object. Custom YAML parsing is needed for templating - the user can define templates for a definition. The function detects appropriate keywords and copies information from specified templates. — parse_tlg_definitions","text":"full list available TLG definitions.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/parse_tlg_definitions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parses the tlg definitions described in yaml file into a list object. Custom YAML parsing is needed for templating - the user can define templates for a definition. The function detects appropriate keywords and copies information from specified templates. — parse_tlg_definitions","text":"path defs provided, path used definitions loaded file. neither given, default, function load system file shiny/tlg.yaml.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/pivot_wider_pknca_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape PKNCA Results — pivot_wider_pknca_results","title":"Reshape PKNCA Results — pivot_wider_pknca_results","text":"function reshapes structure results produced main function PKNCA package (pk.nca) way row represents main results summarized profile individual/patient. Excluding ID variables, column name corresponds calculated parameter brackets corresponding units. AUC intervals, present, added additional columns.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/pivot_wider_pknca_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape PKNCA Results — pivot_wider_pknca_results","text":"","code":"pivot_wider_pknca_results(myres)"},{"path":"https://pharmaverse.github.io/aNCA/reference/pivot_wider_pknca_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape PKNCA Results — pivot_wider_pknca_results","text":"myres output PKNCA::pk.nca","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/pivot_wider_pknca_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape PKNCA Results — pivot_wider_pknca_results","text":"data frame provides easy overview results NCA profile/subject computed lambda (half life) results NCA parameters (cmax, AUC, AUClast)","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/pkcg01.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate PK Concentration-Time Profile Plots — pkcg01","title":"Generate PK Concentration-Time Profile Plots — pkcg01","text":"function generates list ggplots PK concentration-time profiles.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/pkcg01.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate PK Concentration-Time Profile Plots — pkcg01","text":"","code":"pkcg01(   adpc = data(),   xvar = \"AFRLT\",   yvar = \"AVAL\",   xvar_unit = \"RRLTU\",   yvar_unit = \"AVALU\",   color_var = NULL,   color_var_label = NULL,   xbreaks_var = \"NFRLT\",   xbreaks_mindist = 0.5,   xmin = NA,   xmax = NA,   ymin = NA,   ymax = NA,   xlab = paste0(\"!\", xvar, \" [$\", xvar_unit, \"]\"),   ylab = paste0(\"!\", yvar, \" [$\", yvar_unit, \"]\"),   title = NULL,   subtitle = NULL,   footnote = NULL,   plotgroup_vars = c(\"ROUTE\", \"PCSPEC\", \"PARAM\", \"USUBJID\"),   plotgroup_names = list(ROUTE = \"Route\", PCSPEC = \"Specimen\", PARAM = \"Analyte\", USUBJID     = \"Subject ID\"),   scale = c(\"LIN\", \"LOG\", \"SBS\")[1],   studyid = \"STUDYID\",   trt_var = \"TRT01A\" )"},{"path":"https://pharmaverse.github.io/aNCA/reference/pkcg01.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate PK Concentration-Time Profile Plots — pkcg01","text":"adpc data frame containing data. xvar character string variable name x-axis. yvar character string variable name y-axis. xvar_unit character string unit x-axis variable. yvar_unit character string unit y-axis variable. color_var character string variable name color. color_var_label character string color label. xbreaks_var character string x-axis breaks. xmin numeric value specifying minimum x-axis limit. xmax numeric value specifying maximum x-axis limit. ymin numeric value minimum y-axis limit. ymax numeric value maximum y-axis limit. xlab Character x-axis label. Defaults: xvar label & xvar_unit. ylab Character y-axis label. Defaults: yvar label & yvar_unit. footnote character string manual footnote plot. plotgroup_vars character vector variables group data. plotgroup_names character vector grouping variable names. studyid character string specifying study ID variable. trt_var character string specifying treatment variable. options list additional options (e.g., display scale).","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/pkcg01.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate PK Concentration-Time Profile Plots — pkcg01","text":"list ggplot objects unique group.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/pkcg01.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate PK Concentration-Time Profile Plots — pkcg01","text":"Gerardo Rodriguez magic numbers footnote position margin, work app 4 lines NOTE: might require fine tuning line, looks fine now","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/pkcg01.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate PK Concentration-Time Profile Plots — pkcg01","text":"","code":"if (FALSE) { # \\dontrun{   adpc <- read.csv(\"inst/shiny/data/DummyRO_ADNCA.csv\")   attr(adpc[[\"AFRLT\"]], \"label\") <- \"Actual time from first dose\"   attr(adpc[[\"AVAL\"]], \"label\") <- \"Analysis val\"    plots_lin <- pckg01(adpc = adpc, xmax = 1)   plots_log <- pckg01(adpc = adpc, color_var = \"USUBJID\", scale = \"LOG\")   plots_sbs <- pckg01(     adpc = adpc,     color_var = \"USUBJID\",     xbreaks_var = \"NFRLT\",     xmin = 100,     xmax = 1000,     scale = \"SBS\"   ) } # }"},{"path":"https://pharmaverse.github.io/aNCA/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny app — run_app","title":"Run the Shiny app — run_app","text":"Run Shiny app","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny app — run_app","text":"","code":"run_app(...)"},{"path":"https://pharmaverse.github.io/aNCA/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny app — run_app","text":"... Arguments passed shiny::runApp()","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/set_empty_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Set an Empty Label if None Exists — set_empty_label","title":"Set an Empty Label if None Exists — set_empty_label","text":"function sets empty \"label\" attribute vector already one.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/set_empty_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set an Empty Label if None Exists — set_empty_label","text":"","code":"set_empty_label(x)"},{"path":"https://pharmaverse.github.io/aNCA/reference/set_empty_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set an Empty Label if None Exists — set_empty_label","text":"x vector checked potentially assigned empty \"label\" attribute.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/set_empty_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set an Empty Label if None Exists — set_empty_label","text":"vector empty \"label\" attribute already one.","code":""},{"path":"https://pharmaverse.github.io/aNCA/reference/set_empty_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set an Empty Label if None Exists — set_empty_label","text":"","code":"if (FALSE) { # \\dontrun{   # Example usage:   vec <- c(\"A\", \"B\", \"C\")   vec <- set_empty_label(vec)   print(attr(vec, \"label\"))  # Returns \"\" } # }"}]
